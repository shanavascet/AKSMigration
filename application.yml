# application.yml - Base configuration
spring:
  application:
    name: ${SERVICE_NAME:sample-service}

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/sampledb}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:10}
      minimum-idle: ${DB_MIN_IDLE:5}
      idle-timeout: ${DB_IDLE_TIMEOUT:300000}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:20000}
      max-lifetime: ${DB_MAX_LIFETIME:1200000}

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:validate}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true

  cloud:
    kubernetes:
      discovery:
        enabled: true
        all-namespaces: false
        wait-cache-ready: false
        cache-loading-timeout-seconds: 60
      config:
        enabled: true
        sources:
          - name: ${spring.application.name}
            namespace: ${NAMESPACE:default}
        reload:
          enabled: true
          monitoring-config-maps: true
          monitoring-secrets: true
          strategy: refresh

    loadbalancer:
      ribbon:
        enabled: false

    circuitbreaker:
      resilience4j:
        enabled: true

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  shutdown: graceful
  tomcat:
    max-threads: ${TOMCAT_MAX_THREADS:200}
    min-spare-threads: ${TOMCAT_MIN_THREADS:10}
    max-connections: ${TOMCAT_MAX_CONNECTIONS:8192}

# Management and Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,refresh
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    prometheus:
      enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

# Logging Configuration
logging:
  level:
    com.yourcompany: ${LOG_LEVEL:INFO}
    org.springframework.cloud.kubernetes: ${K8S_LOG_LEVEL:WARN}
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"

# OpenFeign Configuration
feign:
  client:
    config:
      default:
        connect-timeout: ${FEIGN_CONNECT_TIMEOUT:5000}
        read-timeout: ${FEIGN_READ_TIMEOUT:10000}
        logger-level: ${FEIGN_LOG_LEVEL:basic}
  compression:
    request:
      enabled: true
    response:
      enabled: true
  circuitbreaker:
    enabled: true

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
  timelimiter:
    configs:
      default:
        timeoutDuration: 2s

# Distributed Tracing
spring.sleuth:
  sampler:
    probability: ${SLEUTH_SAMPLE_RATE:0.1}
  zipkin:
    base-url: ${ZIPKIN_URL:http://zipkin:9411}

---
# Kubernetes Profile
spring:
  config:
    activate:
      on-profile: kubernetes
  cloud:
    kubernetes:
      discovery:
        enabled: true
      config:
        enabled: true
        reload:
          enabled: true

logging:
  level:
    org.springframework.cloud.kubernetes: INFO

---
# Local Development Profile
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
  h2:
    console:
      enabled: true
  cloud:
    kubernetes:
      discovery:
        enabled: false
      config:
        enabled: false

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
  cloud:
    kubernetes:
      discovery:
        enabled: false
      config:
        enabled: false